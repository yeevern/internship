/// <reference types="google.accounts" />
"use client";

import { Metadata } from "next";
import Script from "next/script";
import { useCallback, useEffect, useRef } from "react";
import { setupSession } from "./actions";

export const metadata: Metadata = {
  title: "Welcome to internal-website",
  description: "Generated by create-nx-workspace",
  other: {
    "google-signin-client_id": process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID ?? "",
  },
};

export function GoogleLogin() {
  const buttonRef = useRef<HTMLDivElement>(null);
  const googleLogin = useCallback(() => {
    if (buttonRef.current)
      if (window.google?.accounts) {
        const searchParams = new URLSearchParams(window.location.search);
        const redirect = searchParams.get("redirect");
        const auto_select = searchParams.get("mode") ? (searchParams.get("mode") === "manual" ? false : true) : true;
        const hd = searchParams.get("hd") === "nt" ? "netizentesting.com" : "netizenexperience.com";
        window.google.accounts.id.initialize({
          client_id: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID ?? "",
          context: "signin",
          ux_mode: "popup",
          auto_select,
          itp_support: true,
          hd,
          callback: (response: google.accounts.id.CredentialResponse) => {
            setupSession(response.credential, redirect ? redirect : "/");
          },
        });
        window.google.accounts.id.renderButton(buttonRef.current, {
          type: "standard",
          shape: "pill",
          theme: "filled_black",
          text: "continue_with",
          size: "large",
          logo_alignment: "left",
        });
        window.google.accounts.id.prompt();
      }
  }, [buttonRef]);
  useEffect(googleLogin, [googleLogin]);

  return (
    <>
      <Script src="https://accounts.google.com/gsi/client" defer async onLoad={googleLogin} />
      <div className="flex h-screen">
        <div className="m-auto">
          <div ref={buttonRef}></div>
        </div>
      </div>
    </>
  );
}
